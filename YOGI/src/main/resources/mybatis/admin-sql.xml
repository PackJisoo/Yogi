<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC " - //mybatis.org//DTD Config 3.0//EN" " http://mybatis.org/dtd/mybatis-3-mapper.dtd">
     
<mapper namespace="admin">
<!-- 멤버 관리 -->
	<!-- 멤버 목록 가져오기 -->
	<select id="selectAdminMemberList" resultType="hashmap">	
		SELECT 
			m_no,
			m_id,
			m_name,
			m_phone,
			m_grade,
			m_lv,
			m_penalty,
			to_char(m_date,'yyyy/MM/dd') as m_date,
			m_active
		FROM 
			Members 
		<where>
			<if test="searchWord != null">
				<if test="searchCategory.equals('id')">
					REGEXP_LIKE(m_id,#{searchWord}) 
				</if>
				<if test="searchCategory.equals('grade')">
					AND REGEXP_LIKE(m_lv,#{searchWord}) 
				</if>
			</if>
			<if test="searchMemberActive != null">
				<if test='searchMemberActive.equals("O")'>
					<![CDATA[ AND m_active = 0  ]]>
				</if>
				<if test='searchMemberActive.equals("X")'>
					<![CDATA[ AND m_active = 1   ]]>
				</if>
			</if>
		</where>
		ORDER BY 
			m_no DESC 
	</select>
	
	<select id="selectAdminMemberOne" resultType="hashmap">
		SELECT 
			m_no,
			m_id,
			m_phone,
			m_grade,
			m_lv,
			m_penalty,
			to_char(m_date,'yyyy/MM/dd') as m_date,
			m_active
		FROM 
			Members 
		WHERE
			m_no=#{m_no}
		ORDER BY 
			m_no DESC 
	</select>
	
	<update id="inactivateMember" parameterType="hashmap">
		UPDATE 
			Members 
		SET
			m_active=1
		WHERE
			m_no=#{M_NO}
	</update>
	
	<update id="activateMember" parameterType="hashmap">
		UPDATE 
			Members 
		SET
			m_active=0
		WHERE
			m_no=#{M_NO}
	</update>

	<!-- 회원목록에서 검색하기 -->
	<select id="MemberList_search_m_name_select_all"> 
		SELECT * FROM members WHERE m_name like '%'||#m_name#||'%' ORDER BY m_no desc 
	</select>

	<select id="MemberList_search_m_id_select_all"> 
		SELECT * FROM members WHERE m_id like '%'||#m_id#||'%' ORDER BY m_no desc
	</select>

<!-- 멤버 관리 끝 -->

<!-- 모임 관리 -->
	<!-- 모임 목록 가져오기 -->
	<select id="selectAdminGroupList" resultType="hashmap">
		SELECT
			gg_no,
			gg_name,
			m_name,
			gg_category,
			gg_place,
			gg_cost,
			gg_total,
			gg_penalty,
			gg_active,
			to_char(gg_date,'yyyy/MM/dd') as gg_date
		FROM
			group_gathering g, members m
		WHERE
			g.m_no = m.m_no
		ORDER BY
			gg_no DESC
	</select>

	<update id="inactivateGroup" parameterType="hashmap">
		UPDATE 
			Group_Gathering
		SET
			gg_active=1
		WHERE
			gg_no=#{GG_NO}
	</update>
	
	<update id="activateGroup" parameterType="hashmap">
		UPDATE 
			Group_Gathering
		SET
			gg_active=0
		WHERE
			gg_no=#{GG_NO}
	</update>
<!-- 모임 관리 끝-->

<!-- 신고 관리 -->
	<!-- 신고 목록 가져오기 -->
	<select id="selectAdminReportList" resultType="hashmap">
		<![CDATA[
				SELECT 
					r.r_no,
                    g.gg_name,
					m.m_id,
					r.m_no,
					r.r_comment,
					m.m_active,
					m.m_penalty,
					g.gg_active,
					g.gg_penalty
				FROM
					Report r, Members m, Group_Gathering g
				WHERE
					r.m_pno=m.m_no AND r.gg_no=g.gg_no
				ORDER BY
					r_no DESC
		]]>
	</select>

	<!-- 회원 비활성화 -->
	<update parameterType="hashmap" id="member_inactive"> 
		{call declare begin UPDATE Members SET m_active=#{m_active} WHERE m_no=#{m_no} UPDATE Group_Gathering SET gg_active=#{gg_active} WHERE gg_no=#{gg_no} end } 
	</update>

	<!-- 모임 비활성화 -->
	<update parameterType="hashmap" id="group_inactive"> 
		UPDATE Group_Gathering SET gg_active=#{gg_active} WHERE gg_no=#{gg_no} 
	</update>

	<!-- 신고목록에서 검색하기 -->
	<select id="ReportList_search_gg_name_select_all"> 
		select m.*,g.* from group_gathering g inner join members m on g.m_no=m.m_no where g.gg_penalty>0 and gg_name like '%'||#gg_name#||'%' order by g.gg_no desc 
	</select>

	<select id="ReportList_search_m_id_select_all"> 
		select m.*,g.* from group_gathering g inner join members m on g.m_no=m.m_no where g.gg_penalty>0 and m_id like '%'||#m_id#||'%' ORDER BY g.gg_no desc 
	</select>

	<select id="ReportList_search_m_name_select_all"> 
		select m.*,g.* from group_gathering g inner join members m on g.m_no=m.m_no where g.gg_penalty>0 and m_name like '%'||#m_name#||'%' ORDER BY g.gg_no desc 
	</select>

<!-- 신고 관리 끝-->


<!-- 장소 관리 -->
	<!-- 장소 목록 가져오기 -->
	<select id="selectAdminLendplaceList" resultType="hashmap"> 
		SELECT 
			l_no, 
			l_subject, 
			l_addr,
			l_enable,
			l_payment,
			TO_CHAR(L_SDATE,'YYYY-MM-DD') AS l_sdate, 
			TO_CHAR(L_EDATE,'YYYY-MM-DD') AS l_edate, 
			l_rate,
			l_udate
		FROM 
			lendplace 
		ORDER BY 
			l_no desc 
	</select>
	
	<!-- 장소 목록에서 검색하기 -->
	<select id="LendplaceAdmin_search_l_subject_select_all"> 
		select lendplace.l_no, lendplace.l_subject, lendplace.l_addr, lendplace.l_sdate, lendplace.l_edate, placebook.l_date, members.m_id from lendplace, placebook, members where lendplace.l_no = placebook.l_no and placebook.m_no = members.m_no and l_subject like '%'||#l_subject#||'%' ORDER BY lendplace.l_no desc 
	</select>

	<select id="LendplaceAdmin_search_l_addr_select_all"> 
		select lendplace.l_no, lendplace.l_subject, lendplace.l_addr, lendplace.l_sdate, lendplace.l_edate, placebook.l_date, members.m_id from lendplace, placebook, members where lendplace.l_no = placebook.l_no and placebook.m_no = members.m_no and l_addr like '%'||#l_addr#||'%' ORDER BY lendplace.l_no desc 
	</select>

	<select id="LendplaceAdmin_search_m_id_select_all"> 
		select lendplace.l_no, lendplace.l_subject, lendplace.l_addr, lendplace.l_sdate, lendplace.l_edate, placebook.l_date, members.m_id from lendplace, placebook, members where lendplace.l_no = placebook.l_no and placebook.m_no = members.m_no and m_id like '%'||#m_id#||'%' ORDER BY lendplace.l_no desc 
	</select>

<!-- 장소 관리 끝 -->

<!-- 장소 예약 현황 -->
	<!-- 장소 예약 현황 -->
	<select id="selectAdminPlaceBookList" resultType="hashmap">
		SELECT
			pb_no,
			l_no,
			m_no,
			TO_CHAR(PB_DATE,'YYYY-MM-DD') AS PB_DATE
		FROM
			placebook
		ORDER BY
			l_no desc
	</select>


<!-- 장소 예약 현황 끝-->

</mapper>