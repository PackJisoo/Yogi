<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC " - //mybatis.org//DTD Config 3.0//EN" " http://mybatis.org/dtd/mybatis-3-mapper.dtd">
     
<mapper namespace="members">
   <resultMap type="MembersModel" id="membersRes">
      <result property="m_no" column="M_NO" />
      <result property="m_id" column="M_ID" />
      <result property="m_name" column="M_NAME" />
      <result property="m_password" column="M_PASSWORD" />
      <result property="m_phone" column="M_PHONE" />
      <result property="m_date" column="M_DATE" />
      <result property="m_fav_area" column="M_FAV_AREA" />
      <result property="m_fav_field" column="M_FAV_FIELD" />
      <result property="m_grade" column="M_GRADE" />
      <result property="m_lv" column="M_LV" />
      <result property="m_penalty" column="M_PENALTY" />
      <result property="m_profile" column="M_PROFILE" />
      <result property="m_active" column="M_ACTIVE" />
   </resultMap>
   
   <!-- 회원가입 V -->
	<insert id="insertMember" parameterType="MembersModel">
		INSERT INTO MEMBERS(m_no, m_id, m_name, m_password, m_phone, m_fav_area, m_fav_field, m_grade, m_penalty, m_lv, m_active, m_date, m_profile)
		VALUES(members_seq.nextval, #{m_id}, #{m_name}, #{m_password}, #{m_phone}, #{m_fav_area, jdbcType=VARCHAR}, #{m_fav_field, jdbcType=VARCHAR},  0, 0,'일반회원', 0, #{m_date}, #{m_profile, jdbcType=VARCHAR})
 	</insert>
	
	<!-- 회원정보 수정 -->
	<update id="updateMember" parameterType="MembersModel">
		update members set m_password=#{m_password}, m_phone=#{m_phone}, m_fav_area=#{m_fav_area}, m_fav_field=#{m_fav_field} where m_id=#{m_id}
	</update>
   
   <!-- 회원 탈퇴 -->
	<delete id="deleteMember" parameterType="String">
		delete from members where m_id=#{m_id}
	</delete>
	<delete id="deleteGroup" parameterType="int">
		delete from group_gathering where m_no=#{m_no}
	</delete>
	
	<!-- id 중복 확인 V -->
	<select id="idCheck" resultType="hashmap" parameterType="string">
		SELECT COUNT(*) FROM MEMBERS WHERE m_id=#{m_id}
	</select>
	
	<!-- id 찾기 V -->
	<select id="findId" resultType="MembersModel" parameterType="MembersModel">
		select * from members where m_name=#{m_name, jdbcType=VARCHAR} and m_phone=#{m_phone, jdbcType=VARCHAR}
	</select>
	
	<!-- 비밀번호 초기화 V-->
	<select id="findPW" resultType="MembersModel" parameterType="MembersModel">
		select * from members where m_id=#{m_id, jdbcType=VARCHAR} and m_name=#{m_name, jdbcType=VARCHAR} and m_phone=#{m_phone, jdbcType=VARCHAR}
	</select>
	<update id="resetPW" parameterType="MembersModel">
		update members set m_password=#{m_password} where m_id=#{m_id}
	</update>
	
	<!-- 로그인 췤췤 V -->
	<select id="loginCheck" resultType="MembersModel" parameterType="MembersModel">
		SELECT * FROM MEMBERS WHERE m_id = #{m_id} and m_password=#{m_password}
	</select>
   
   <!-- 추천추천 -->
	<select id="fav_area" resultType="String" parameterType="String">
		select M_FAV_AREA from members where m_id =#{m_id}
	</select>
	<select id="fav_field" resultType="String" parameterType="String">
		select M_FAV_FIELD from members where m_id =#{m_id}
	</select>
	
	<select id="no_recommend" resultType="GroupModel">
		select * from Group_Gathering  order by  gg_no desc
	</select>
	
	<select id="recommend" resultType="GroupModel" parameterType="String">
		select * from Group_Gathering where ${param} order by  gg_no desc
	</select>
	
	
	<!-- member query -->
	<select id="members_select_one_where_m_no" resultType="MembersModel" parameterType="int">
		select * from members where m_no=#{m_no}
	</select>
   
</mapper>   